{"version":3,"sources":["components/Frase.js","App.js","index.js"],"names":["ContenedorFrase","styled","div","Frase","frase","Object","keys","length","quote","author","className","colorWhite","Contenedor","Button","button","App","useState","setFrase","consultarAPI","a","fetch","resultado","json","data","objFrase","alert","useEffect","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAKMA,EAAkBC,IAAOC,IAAV,uxBA8DNC,EArBD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,GAAkC,IAA9BC,OAAOC,KAAKF,GAAOG,OAAc,OAAO,KAE5C,IAAQC,EAAkBJ,EAAlBI,MAAOC,EAAWL,EAAXK,OAEf,OAEE,cADA,CACCT,EAAD,CAEEU,UAAU,UAFZ,UAIE,6BAAKF,IACL,mCAAMC,OAJDD,ICjDLG,EAAa,UAEbC,EAAaX,IAAOC,IAAV,uHAOVW,EAASZ,IAAOa,OAAV,unBAUDH,EAIWA,GAuDPI,MApCf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOZ,EAAP,KAAca,EAAd,KADa,SAGEC,IAHF,2EAGb,kCAAAC,EAAA,+EAG4BC,MAAM,+CAHlC,cAGUC,EAHV,gBAIuBA,EAAUC,OAJjC,OAIUC,EAJV,qBAKuBA,EALvB,GAKWC,EALX,KAMIP,EAASO,GANb,kDAQIC,MAAM,qCARV,2DAHa,sBAoBb,OAJAC,qBAAU,WACRR,MACC,IAGD,eAACN,EAAD,WAEE,cAAC,EAAD,CACER,MAAOA,IAGT,cAACS,EAAD,CACEc,QAAST,EADX,+BCrENU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.814bb77d.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nimport \"./../animation.css\";\r\n\r\nconst ContenedorFrase = styled.div`\r\n  padding: 2rem;\r\n  border-radius: 0.5rem;\r\n  background-color: #fff;\r\n  max-width: 800px;\r\n\r\n  @media (min-width: 992px) {\r\n    margin-top: 10rem;\r\n  }\r\n\r\n  h1 {\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    text-align: center;\r\n    position: relative;\r\n    padding-left: 2rem;\r\n\r\n    &::before {\r\n      content: open-quote;\r\n      font-size: 5rem;\r\n      position: absolute;\r\n      left: -1rem;\r\n      top: -2rem;\r\n    }\r\n    &::after {\r\n      content: close-quote;\r\n      font-size: 5rem;\r\n      position: absolute;\r\n      right: -1rem;\r\n      bottom: -5rem;\r\n    }\r\n  }\r\n  p {\r\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n    font-size: 1.6rem;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    color: #666;\r\n    margin-top: 4rem;\r\n  }\r\n`;\r\n\r\nconst Frase = ({ frase }) => {\r\n  if (Object.keys(frase).length === 0) return null;\r\n\r\n  const { quote, author } = frase;\r\n\r\n  return (\r\n    // prettier-ignore\r\n    <ContenedorFrase\r\n      key={quote}\r\n      className=\"fade-in\"\r\n    >\r\n      <h1>{quote}</h1>\r\n      <p>- {author}</p>\r\n    </ContenedorFrase>\r\n  );\r\n};\r\n\r\nFrase.propTypes = {\r\n  frase: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Frase;\r\n","import { useState, useEffect } from \"react\";\nimport Frase from \"./components/Frase\";\n\nimport styled from \"@emotion/styled\";\n\nconst colorWhite = \"#ffffff\";\n\nconst Contenedor = styled.div`\n  display: flex;\n  align-items: center;\n  padding-top: 5rem;\n  flex-direction: column;\n`;\n\nconst Button = styled.button`\n  background: -webkit-linear-gradient(\n    top left,\n    #007d35 0%,\n    #007d35 40%,\n    #0f574e 100%\n  );\n  opacity: 0.8;\n  background-size: 300px;\n  font-family: Arial, Helvetica, sans-serif;\n  color: ${colorWhite};\n  margin-top: 3rem;\n  padding: 1rem 3rem;\n  font-size: 2rem;\n  border: 2px solid ${colorWhite};\n  border-radius: 10px;\n  transition: all 0.3s;\n\n  &:hover {\n    cursor: pointer;\n    opacity: 1;\n    transform: translateY(-3px);\n    box-shadow: 10px 20px 10px rgb(0 0 0 / 20%);\n  }\n\n  &:active {\n    transform: translateY(-1px);\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\n  }\n`;\n\n// api endpoint : https://breakingbadapi.com/api/quote/random\n\nfunction App() {\n  const [frase, setFrase] = useState({});\n\n  async function consultarAPI() {\n    try {\n      // prettier-ignore\n      const resultado = await fetch(\"https://breakingbadapi.com/api/quote/random\");\n      const data = await resultado.json(); // here we retrive the data\n      const [objFrase] = data;\n      setFrase(objFrase);\n    } catch (error) {\n      alert(`No se puedieron extraer los datos`);\n    }\n  }\n\n  // useEffect para mostrar por primera vez una frase\n  useEffect(() => {\n    consultarAPI();\n  }, []);\n\n  return (\n    <Contenedor>\n      {/* prettier-ignore */}\n      <Frase\n        frase={frase}\n      />\n      {/* prettier-ignore */}\n      <Button\n        onClick={consultarAPI}\n      >\n        Obtener frase\n      </Button>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}